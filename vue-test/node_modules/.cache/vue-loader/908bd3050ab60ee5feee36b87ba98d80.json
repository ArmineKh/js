{"remainingRequest":"/home/phobos/JavaScript/vue-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/phobos/JavaScript/vue-test/src/views/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/phobos/JavaScript/vue-test/src/views/Register.vue","mtime":1579781447795},{"path":"/home/phobos/JavaScript/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/phobos/JavaScript/vue-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/phobos/JavaScript/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/phobos/JavaScript/vue-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7ZW1haWwsIHJlcXVpcmVkLCBtaW5MZW5ndGgsIG1heExlbmd0aH0gZnJvbSAndnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdyZWdpc3RlcicsCiAgZGF0YTogKCkgPT4gKHsKICAgIGVtYWlsOiAnJywKICAgIHBhc3N3b3JkOiAnJywKICAgIG5hbWU6ICcnLAogICAgYWdyZWU6IGZhbHNlCiAgfSksCiAgdmFsaWRhdGlvbnM6IHsKICAgIGVtYWlsOiB7ZW1haWwsIHJlcXVpcmVkfSwKICAgIHBhc3N3b3JkOiB7cmVxdWlyZWQsIG1pbkxlbmd0aDogbWluTGVuZ3RoKDYpfSwKICAgIG5hbWU6IHtyZXF1aXJlZCwgbWF4TGVuZ3RoOiBtYXhMZW5ndGgoMjApfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIHN1Ym1pdEhhbmRsZXIoKSB7CiAgICAgIGlmICh0aGlzLiR2LiRpbnZhbGlkKSB7CiAgICAgICAgdGhpcy4kdi4kdG91Y2goKQogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIGNvbnN0IGZvcm1EYXRhID0gewogICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLAogICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLAogICAgICAgIG5hbWU6IHRoaXMubmFtZQogICAgICB9CgogICAgICBjb25zb2xlLmxvZyhmb3JtRGF0YSkKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy8nKQogICAgfQogIH0KfQo="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\n    <div class=\"card-content\">\n      <span class=\"card-title\">Домашняя бухгалтерия</span>\n      <div class=\"input-field\">\n        <input\n            id=\"email\"\n            type=\"text\"\n            v-model.trim=\"email\"\n            :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\n        >\n        <label for=\"email\">Email</label>\n        <small\n          class=\"helper-text invalid\"\n          v-if=\"$v.email.$dirty && !$v.email.required\"\n        >Поле Email не должно быть пустым</small>\n        <small\n          class=\"helper-text invalid\"\n          v-else-if=\"$v.email.$dirty && !$v.email.email\"\n        >Введите корретный Email</small>\n      </div>\n      <div class=\"input-field\">\n        <input\n            id=\"password\"\n            type=\"password\"\n            v-model.trim=\"password\"\n            :class=\"{invalid: ($v.password.$dirty && !$v.password.required) || ($v.password.$dirty && !$v.password.minLength)}\"\n        >\n        <label for=\"password\">Пароль</label>\n        <small\n          class=\"helper-text invalid\"\n          v-if=\"$v.password.$dirty && !$v.password.required\"\n        >\n          Введите пароль\n        </small>\n      </div>\n      <div class=\"input-field\">\n        <input\n            id=\"name\"\n            type=\"text\"\n            v-model.trim=\"name\"\n            :class=\"{invalid: ($v.name.$dirty && !$v.name.required) || ($v.name.$dirty && !$v.name.maxLength)}\"\n        >\n        <label for=\"name\">Имя</label>\n        <small class=\"helper-text invalid\">Name must be required</small>\n      </div>\n      <p>\n        <label>\n          <input type=\"checkbox\" />\n          <span>С правилами согласен</span>\n        </label>\n      </p>\n    </div>\n    <div class=\"card-action\">\n      <div>\n        <button\n            class=\"btn waves-effect waves-light auth-submit\"\n            type=\"submit\"\n        >\n          Зарегистрироваться\n          <i class=\"material-icons right\">send</i>\n        </button>\n      </div>\n\n      <p class=\"center\">\n        Уже есть аккаунт?\n        <router-link to=\"/login\">Войти!</router-link>\n      </p>\n    </div>\n  </form>\n</template>\n\n<script>\nimport {email, required, minLength, maxLength} from 'vuelidate/lib/validators'\n\nexport default {\n  name: 'register',\n  data: () => ({\n    email: '',\n    password: '',\n    name: '',\n    agree: false\n  }),\n  validations: {\n    email: {email, required},\n    password: {required, minLength: minLength(6)},\n    name: {required, maxLength: maxLength(20)},\n  },\n  methods: {\n    submitHandler() {\n      if (this.$v.$invalid) {\n        this.$v.$touch()\n        return\n      }\n      const formData = {\n        email: this.email,\n        password: this.password,\n        name: this.name\n      }\n\n      console.log(formData)\n      this.$router.push('/')\n    }\n  }\n}\n</script>\n"]}]}